@namespace TKZ.Client.Pages.Log
@inject LogBase LB
@inject Toolbelt.Blazor.I18nText.I18nText I18nText

@*<div class="pre_log d-inline-block flex-column">
        R
    </div>*@
<div class="log w3-animate-right w3-animate-fading @(LB.Collapse ? "collapse":"")" @onchange="LogChangeEvent">
    <div class="log-content" @onchange="LogChangeEvent">
        <div class="p-1" style="text-align:center;">
            <button class="container-fluid btn btn-sm w-auto justify-content-center"
                    @onclick="RemoveMessageQueue">
                <b>@Localizer.Clear</b>
            </button>
        </div>
        @foreach (var mes in LB.Messages)
        {
            <TKZ.Client.Pages.Log.Message Class="@mes.Class"
                                          Type="@mes.Type"
                                          Header="@mes.Header"
                                          Text="@mes.Text"
                                          Link="@mes.Link" />
        }
    </div>
</div>

@code {
    [Parameter]
    public EventCallback LogChangeEvent { get; set; }

    private async Task RemoveMessageQueue()
    {
        await LB.RemoveMessage();
        LB.Collapse = !LB.Collapse;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        LB.OnChange += StateHasChanged;
    }

    //Localizator
    I18nText.Pages.Log.Log Localizer = new I18nText.Pages.Log.Log();

    protected override async Task OnInitializedAsync()
    {
        Localizer = await I18nText.GetTextTableAsync<I18nText.Pages.Log.Log>(this);
    }
}