@page "/equip"
@using Blazorise.DataGrid
@using TKZ.Shared.Model
@inject HttpClient Http
@inject Toolbelt.Blazor.I18nText.I18nText I18nText
@inject LogBase Log
@using TKZ.Client.Pages.Components

@if (Grid.Networks.Count <= 1)
{
}
else if (equipment == null)
{
    <LoadingElement />
}
else
{
    <div class="frame table-container overflow-auto">
        <DataGrid TItem="Equip"
                  Data="@equipment"
                  PageSize="@equipment.Count"
                  EditMode="@DataGridEditMode.Inline"
                  Editable="true"
                  Sortable="true"
                  Filterable="true"
                  RowInserted="@OnRowInserted"
                  RowUpdated="@OnRowUpdated"
                  RowRemoved="@OnRowRemoved"
                  Narrow="true"
                  Class="my_table text-center">
            @*IsActive*@
            <DataGridColumn TItem="Equip"
                            Field="@nameof(Equip.IsActive)"
                            Caption="@(@Localizer.IsActive)"
                            Editable="true"
                            Sortable="true"
                            CellClass="@((item)=>"check-column")">
                <DisplayTemplate>
                    <Check TValue="bool" Checked="context.IsActive" CheckedChanged="@((v)=>context.IsActive = v)" />
                </DisplayTemplate>
                <EditTemplate>
                    <Check TValue="bool" Checked="@((bool)( ( (CellEditContext)context ).CellValue ))" CheckedChanged="@(( v ) => ( (CellEditContext)context ).CellValue = v)" />
                </EditTemplate>
                <FilterTemplate>
                    <Select Class="black check-column" TValue="string" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                        <SelectItem Value="@("*")"></SelectItem>
                        <SelectItem Value="@(true.ToString())">@Localizer.ActiveFilter</SelectItem>
                        <SelectItem Value="@(false.ToString())">@Localizer.NotActiveFilter</SelectItem>
                    </Select>
                </FilterTemplate>
            </DataGridColumn>
            @*BusId*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.BusId)"
                                   Caption="@Localizer.Bus"
                                   Editable="true"
                                   Sortable="true"
                                   Filterable="true"
                                   CellClass="@((item)=>"name-column")">
                <DisplayTemplate>
                    @if (grid.Buses.ContainsKey(context.BusId))@grid.Buses[context.BusId].Name
                </DisplayTemplate>
                <EditTemplate>
                    <Select Class="black name-column" TValue="int" SelectedValue="@((int)(((CellEditContext)context).CellValue))" SelectedValueChanged="@((v) => ((CellEditContext)context).CellValue = v)">
                        <SelectItem Value="@("*")"></SelectItem>
                        @foreach (var item in grid.Buses.Values.Where(b => b.Id != 0).OrderBy(b => b.Name))
                        {
                            <SelectItem TValue="int" Value="@(item.Id)">@item.Name</SelectItem>
                        }
                    </Select>
                </EditTemplate>
                <FilterTemplate>
                    <Select Class="black name-column" TValue="string" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                        <SelectItem Value="@("*")"></SelectItem>
                        @foreach (var item in equipment.Select(b => b.BusId).Distinct().OrderBy(n => n))
                        {
                            if (grid.Buses.ContainsKey(item))
                            {
                                <SelectItem Value="@item">@grid.Buses[item].Name</SelectItem>
                            }
                        }
                    </Select>
                </FilterTemplate>
            </DataGridNumericColumn>

            @*Name*@
            <DataGridColumn TItem="Equip"
                            Field="@nameof(Equip.Name)"
                            Caption="@(@Localizer.Name)"
                            Editable="true"
                            Sortable="true"
                            CellClass="@((item)=>"name-column")">
            </DataGridColumn>
            @*R*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.R)"
                                   Caption="@(new String("R, ["+@Localizer.ohm+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")"></DataGridNumericColumn>
            @*X*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.X)"
                                   Caption="@(new String("X, ["+@Localizer.ohm+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")"></DataGridNumericColumn>
            @*R2*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.R2)"
                                   Caption="@(new String("R2, ["+@Localizer.ohm+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")"></DataGridNumericColumn>
            @*X2*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.X2)"
                                   Caption="@(new String("X2, ["+@Localizer.ohm+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")"></DataGridNumericColumn>
            @*R0*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.R0)"
                                   Caption="@(new String("R0, ["+@Localizer.ohm+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")"></DataGridNumericColumn>
            @*X0*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.X0)"
                                   Caption="@(new String("X0, ["+@Localizer.ohm+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")"></DataGridNumericColumn>
            @*E*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.E)"
                                   Caption="@(new String(@Localizer.EMF+", ["+@Localizer.kV+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")"></DataGridNumericColumn>
            @*FI_E*@
            <DataGridNumericColumn TItem="Equip"
                                   Field="@nameof(Equip.Fi_E)"
                                   Caption="@(new String(@Localizer.EMF+" "+@Localizer.angle+", ["+@Localizer.deg+"]"))"
                                   Editable="true"
                                   Sortable="true"
                                   CellClass="@((item)=>"numeric-column")">

                <DisplayTemplate>
                    @{
                        double angle = ((context).Fi_E == 360 || (context).Fi_E == -360) ? (context).Fi_E = 0 : (context).Fi_E;
                        @(angle + "°")
                    }
                </DisplayTemplate>
                <EditTemplate>
                    <NumericEdit TValue="double"
                                 Value="@((double)(((CellEditContext)context).CellValue))"
                                 ValueChanged="@(v=>((CellEditContext)context).CellValue=v)"
                                 Min="-360"
                                 Max="360" />
                </EditTemplate>
            </DataGridNumericColumn>

            @*Commands*@
            <DataGridCommandColumn TItem="Equip"
                                   CellClass="@((item)=>"edit-column")">
                <NewCommandTemplate>
                    <Button_Add OnClickCallback="@context.Clicked" />
                </NewCommandTemplate>
                <EditCommandTemplate>
                    <Button_Edit OnClickCallback="@context.Clicked" />
                    <Button_Duplicate OnClickCallback="@(() => DuplicateItem(context.Item))" />
                </EditCommandTemplate>
                <DeleteCommandTemplate>
                    <Button_Delete OnClickCallback="@context.Clicked" />
                </DeleteCommandTemplate>
                <SaveCommandTemplate>
                    <Button_Save OnClickCallback="@context.Clicked" />
                </SaveCommandTemplate>
                <CancelCommandTemplate>
                    <Button_Cancel OnClickCallback="@context.Clicked" />
                </CancelCommandTemplate>
                <ClearFilterCommandTemplate>
                    <Button_Filter OnClickCallback="@context.Clicked" />
                </ClearFilterCommandTemplate>
            </DataGridCommandColumn>
        </DataGrid>
    </div>

}

@code {
    [Inject] Grid grid { get; set; }

    private List<Equip> equipment { get; set; }

    void OnRowInserted(SavedRowItem<Equip, Dictionary<string, object>> e) => grid.Equipment.Add(e.Item.Id, e.Item);

    //TODO: Implement(?)
    void OnRowUpdated(SavedRowItem<Equip, Dictionary<string, object>> e) { }

    void OnRowRemoved(Equip e)
    {
        if (grid.Equipment.Values.Contains(e)) grid.Equipment.Remove(e.Id);
    }

    //TODO: Сделать механизм возникновения ошибки при одинаковых номерах (наименованиях)
    void DuplicateItem(Equip e)
    {
        var new_equip = new Equip()
        {
            Name = e.Name,
            R = e.R,
            X = e.X,
            E = e.E,
            Fi_E = e.Fi_E,
            BusId = e.BusId,
            IsActive = e.IsActive
        };

        equipment.Add(new_equip);
        grid.Equipment.Add(new_equip.Id, new_equip);

        StateHasChanged();
    }

    //Localizator
    I18nText.Pages.Branches Localizer = new I18nText.Pages.Branches();

    protected override async Task OnInitializedAsync()
    {
        grid = await Grid.GetInstance();
        Localizer = await I18nText.GetTextTableAsync<I18nText.Pages.Branches>(this);
        equipment = await Task.Run(() => grid.Equipment.Values.ToList<Equip>());
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await ValidateOnRender();
    }

}
