@layout SecondaryLayout
@page "/"
@inject Toolbelt.Blazor.I18nText.I18nText I18nText
@inject NavigationManager navmanager
@using TKZ.Shared
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http

<div class="landing-image">
    <div class="w3-animate-opacity">
        <header class="d-flex align-items-center sticky-top landing-navs">
            <NavLink class="navbar-brand active mx-5"
                     href="/"
                     Match="NavLinkMatch.All"
                     ActiveClass="active"
                     style="font-family: Amithen;
                    color: var(--S-middle);
                    font-size: 2.5rem;
                    width: 120px;">
                Lime
            </NavLink>
            <NavLink class="ml-auto landing-header-link"
                     href="/nodes"
                     Match="NavLinkMatch.All"
                     ActiveClass="active">
                Рассчитать
            </NavLink>
            <Tooltip Text="@Localizer.Language" Placement="Placement.Bottom">
                <button type="button"
                        class="icon"
                        @onclick="ChangeLanguage">
                    <svg @onclick="@(() => {})" class="header-icon">
                        <use href="@(IsRus ? SourceRus : SourceUS )"></use>
                    </svg>
                </button>
            </Tooltip>
        </header>

        <div class="landing-navs-section">
            <Link class="landing-navs-section-item"
                  href="#main"
                  ActiveClass="active" />
            <Link class="landing-navs-section-item"
                  href="#feature"
                  ActiveClass="active" />
            <Link class="landing-navs-section-item"
                  href="#contacts"
                  ActiveClass="active" />
        </div>
        <div class="d-flex flex-column landing-screen" id="main">
            <div class="landing-main-text text-justify">
                <p>
                    <span>Lime</span> - сервис для расчета токов замыкания в электрической сети на основе метода симметричных составляющих
                </p>
                <div class="container-fluid text-center">
                    <Button Class="my_button primary landing"
                            @onclick="@(() => {navmanager.NavigateTo("/nodes"); })">
                        Начать
                    </Button>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column landing-screen" id="feature">
            <h1>Наши преимущества</h1>
            <div class="d-flex flex-row  landing-feature landing-text align-items-center">
                <svg @onclick="@(() => { })" class="landing-icon">
                    <use href="/img/Icon.svg#RoundCheck"></use>
                </svg>
                <div>Абсолютно бесплатный</div>
            </div>
            <div class="d-flex flex-row landing-feature landing-text align-items-center">
                <svg @onclick="@(() => { })" class="landing-icon">
                    <use href="/img/Icon.svg#RoundCheck"></use>
                </svg>
                <div>Для любых целей: обучение, бизнес или исследования</div>
            </div>
            <div class="d-flex flex-row landing-feature landing-text align-items-center">
                <svg @onclick="@(() => { })" class="landing-icon">
                    <use href="/img/Icon.svg#RoundCheck"></use>
                </svg>
                <div>Удобный интерфейс</div>
            </div>
            <div class="d-flex flex-row landing-feature landing-text align-items-center">
                <svg @onclick="@(() => { })" class="landing-icon">
                    <use href="/img/Icon.svg#RoundCheck"></use>
                </svg>
                <div>Подробное руководство пользователя</div>
            </div>
        </div>

        <div id="contacts">
            <TKZ.Client.Pages.Contact.Contacts IsFrame="false"
                                               AdditionStyle="d-flex flex-column landing-screen"
                                               CtxtVisibility="false" />
        </div>
    </div>    
</div>
@code {

    public const string SourceRus = "/img/Icon.svg#russia";
    public const string SourceUS = "/img/Icon.svg#USA";

    public bool IsRus { get; set; } = true;

    public async Task ChangeLanguage()
    {
        IsRus = !IsRus;
        if (IsRus) await I18nText.SetCurrentLanguageAsync("ru");
        else await I18nText.SetCurrentLanguageAsync("en");
    }

    //Localizator
    I18nText.Pages.Index Localizer = new I18nText.Pages.Index();

    protected override async Task OnInitializedAsync()
    {
        Localizer = await I18nText.GetTextTableAsync<I18nText.Pages.Index>(this);
    }
}